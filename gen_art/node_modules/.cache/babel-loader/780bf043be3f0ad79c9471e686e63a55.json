{"ast":null,"code":"var _jsxFileName = \"/home/osboxes/Documents/Github/Generative_Art_2/docs/gen_art/src/App/Section.js\";\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown'; // CSS files\n\nimport './Section.css';\nimport 'github-markdown-css/github-markdown.css'; // const\n\nconst IS_DEV = true; // get location of images folder in webpack\n\nconst imageContext = require.context('../assets/images', true); // also get location of the markdown text files to use\n// const markdownContext = require.context('../assets/data/sections/', false, /\\.md$/);\n// grab uri of each markdown file in here\n// const markdownFiles = markdownContext\n//     .keys()\n//     .map((filename) => markdownContext(filename));\n// console.log(markdownFiles);\n\n\nclass Section extends React.Component {\n  constructor(props) {\n    console.log(\"Section \" + props.name); // props are still accessible through super constructor\n\n    super(props); // default set state for derived variables\n\n    this.state = {\n      fileURL: '',\n      thumbnailURL: '',\n      text: '' // generate thumbnail\n\n    };\n    if (props.thumbnailURL !== '') this.state.thumbnailURL = imageContext('./thumbnails/' + props.thumbnailURL);else this.state.thumbnailURL = imageContext('./thumbnails/moon2.png'); // generate section text blurb\n    // first, find the url of the matching section\n\n    var that = this; // markdownFiles.forEach(function(file) {\n    //     if(file.includes(props.sectionID))\n    //         that.state.fileURL = file;\n    // });\n  } // reactjs.org says that this function is a good place to load remote data, say from your github server\n\n\n  componentDidMount() {// load that file\n    // console.log(this.state.fileURL);\n    // fetch(this.state.fileURL)\n    //     .then(result => result.text())\n    //     .then(result => this.setState({text: result}));\n  }\n\n  render() {\n    // redirect to port 8000 if in dev\n    let url = \"\";\n    if (IS_DEV) url = \"http://localhost:8000/\" + this.props.sectionID + \".html\"; // else default url\n    else url = \"https://dimembermatt.github.io/Generative_Art/\" + this.props.sectionID + \".html\";\n    return React.createElement(\"div\", {\n      className: \"section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"thumbnail\",\n      src: this.state.thumbnailURL,\n      alt: this.props.thumbnailURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Read more...\")));\n  }\n\n}\n\nexport default Section;","map":{"version":3,"sources":["/home/osboxes/Documents/Github/Generative_Art_2/docs/gen_art/src/App/Section.js"],"names":["React","ReactMarkdown","IS_DEV","imageContext","require","context","Section","Component","constructor","props","console","log","name","state","fileURL","thumbnailURL","text","that","componentDidMount","render","url","sectionID"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,gBAA1B,C,CAEA;;AACA,OAAO,eAAP;AACA,OAAO,yCAAP,C,CAEA;;AACA,MAAMC,MAAM,GAAG,IAAf,C,CAEA;;AACA,MAAMC,YAAY,GAAGC,OAAO,CAACC,OAAR,CAAgB,kBAAhB,EAAoC,IAApC,CAArB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,OAAN,SAAsBN,KAAK,CAACO,SAA5B,CAAsC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAaF,KAAK,CAACG,IAA/B,EADe,CAEf;;AACA,UAAMH,KAAN,EAHe,CAIf;;AACA,SAAKI,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,EADA;AAETC,MAAAA,YAAY,EAAE,EAFL;AAGTC,MAAAA,IAAI,EAAE,EAHG,CAMb;;AANa,KAAb;AAOA,QAAGP,KAAK,CAACM,YAAN,KAAuB,EAA1B,EACI,KAAKF,KAAL,CAAWE,YAAX,GAA0BZ,YAAY,CAAC,kBAAkBM,KAAK,CAACM,YAAzB,CAAtC,CADJ,KAGI,KAAKF,KAAL,CAAWE,YAAX,GAA0BZ,YAAY,CAAC,wBAAD,CAAtC,CAfW,CAiBf;AACA;;AACA,QAAIc,IAAI,GAAG,IAAX,CAnBe,CAoBf;AACA;AACA;AACA;AACH,GAzBiC,CA2BlC;;;AACAC,EAAAA,iBAAiB,GAAE,CACf;AACA;AACA;AACA;AACA;AACH;;AAEDC,EAAAA,MAAM,GAAE;AACJ;AACA,QAAIC,GAAG,GAAG,EAAV;AACA,QAAGlB,MAAH,EACIkB,GAAG,GAAG,2BAA2B,KAAKX,KAAL,CAAWY,SAAtC,GAAkD,OAAxD,CADJ,CAEA;AAFA,SAIID,GAAG,GAAG,mDAAmD,KAAKX,KAAL,CAAWY,SAA9D,GAA0E,OAAhF;AACJ,WACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,GAAG,EAAE,KAAKR,KAAL,CAAWE,YAA3C;AAAyD,MAAA,GAAG,EAAE,KAAKN,KAAL,CAAWM,YAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI;AAAG,MAAA,IAAI,EAAEK,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,CAFJ,CADJ;AAUH;;AAtDiC;;AAyDtC,eAAed,OAAf","sourcesContent":["import React from 'react';\nimport ReactMarkdown from 'react-markdown';\n\n// CSS files\nimport './Section.css';\nimport 'github-markdown-css/github-markdown.css';\n\n// const\nconst IS_DEV = true;\n\n// get location of images folder in webpack\nconst imageContext = require.context('../assets/images', true);\n// also get location of the markdown text files to use\n// const markdownContext = require.context('../assets/data/sections/', false, /\\.md$/);\n// grab uri of each markdown file in here\n// const markdownFiles = markdownContext\n//     .keys()\n//     .map((filename) => markdownContext(filename));\n// console.log(markdownFiles);\n\nclass Section extends React.Component {\n    constructor(props) {\n        console.log(\"Section \" + props.name);\n        // props are still accessible through super constructor\n        super(props);\n        // default set state for derived variables\n        this.state = {\n            fileURL: '',\n            thumbnailURL: '',\n            text: ''\n        }\n\n        // generate thumbnail\n        if(props.thumbnailURL !== '')\n            this.state.thumbnailURL = imageContext('./thumbnails/' + props.thumbnailURL);\n        else\n            this.state.thumbnailURL = imageContext('./thumbnails/moon2.png');\n\n        // generate section text blurb\n        // first, find the url of the matching section\n        var that = this;\n        // markdownFiles.forEach(function(file) {\n        //     if(file.includes(props.sectionID))\n        //         that.state.fileURL = file;\n        // });\n    }\n\n    // reactjs.org says that this function is a good place to load remote data, say from your github server\n    componentDidMount(){\n        // load that file\n        // console.log(this.state.fileURL);\n        // fetch(this.state.fileURL)\n        //     .then(result => result.text())\n        //     .then(result => this.setState({text: result}));\n    }\n\n    render(){\n        // redirect to port 8000 if in dev\n        let url = \"\";\n        if(IS_DEV)\n            url = \"http://localhost:8000/\" + this.props.sectionID + \".html\";\n        // else default url\n        else\n            url = \"https://dimembermatt.github.io/Generative_Art/\" + this.props.sectionID + \".html\";\n        return (\n            <div className=\"section\">\n                <img className=\"thumbnail\" src={this.state.thumbnailURL} alt={this.props.thumbnailURL}></img>\n                <div className=\"details\">\n                    {/* <ReactMarkdown className=\"markdown-body\" source={this.state.text} */}\n                    {/* normal link to a autogenerated component using the markdown file. */}\n                    <a href={url}>Read more...</a>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Section;\n"]},"metadata":{},"sourceType":"module"}